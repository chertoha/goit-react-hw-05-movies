{"version":3,"file":"static/js/102.0412275a.chunk.js","mappings":"uSAEaA,GAAQC,EAAAA,EAAAA,IAAO,QAAPA,CAAH,mOAMA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,aAAnB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,YAAlB,IAGPC,GAASR,EAAAA,EAAAA,IAAO,SAAPA,CAAH,oSAMD,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,aAAnB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,YAAlB,IAEJ,SAAAN,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,OAAxB,IAEO,SAAAT,GAAC,OAAIA,EAAEC,MAAME,OAAOO,YAAnB,I,SCqCzB,EA3De,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASK,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAQZ,EAAaa,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IAELD,EAAUF,EAAAA,GAAAA,UACVM,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GAGJN,EAAUF,EAAAA,GAAAA,UACVH,EAAUW,EACX,IACAC,OAAM,SAAAX,GACLC,EAASD,EAAMY,SACfR,EAAUF,EAAAA,GAAAA,SACX,IACJ,GAAE,CAACG,IASJ,OACE,iCACE,UAACQ,EAAA,EAAD,CACEC,SAVW,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASC,OAAOH,MACvCF,EAAEG,OAAOG,QACT3B,EAA0B,KAAVuB,EAAe,CAAC,EAAI,CAAEZ,MAAOY,GAC9C,EAMKK,GAAG,OACHC,QAAQ,OACRC,WAAW,SACXC,OAAQ,GACRC,GAAI,EACJC,GAAI,EAPN,WASE,SAAChD,EAAD,CAAOiD,KAAK,OAAOC,KAAK,SAASC,YAAY,kBAC7C,SAAC1C,EAAD,CAAQwC,KAAK,SAAb,wBAGF,SAACG,EAAA,EAAD,CAAmB5B,OAAQA,EAAQH,MAAOA,EAA1C,UACE,SAACgC,EAAA,EAAD,CACElC,OAAQA,EACRmC,KAAM,WACNC,MAAO,CAAEC,KAAMxC,SAKxB,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Field = styled('input')`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n\n  height: 100%;\n  margin-right: ${p => p.theme.space[4]};\n  padding-left: ${p => p.theme.space[3]};\n  padding-right: ${p => p.theme.space[3]};\n\n  border: 1px solid ${p => p.theme.colors.secondaryText};\n  border-radius: ${p => p.theme.radii.borderRadius};\n`;\n\nexport const Button = styled('button')`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n\n  height: 100%;\n  padding-left: ${p => p.theme.space[3]};\n  padding-right: ${p => p.theme.space[3]};\n  cursor: pointer;\n\n  border: 1px solid ${p => p.theme.colors.secondaryText};\n  border-radius: ${p => p.theme.radii.borderRadius};\n\n  transition: ${p => p.theme.transitions.default};\n  :hover {\n    background-color: ${p => p.theme.colors.secondaryBgd};\n  }\n`;\n","import Box from 'components/Box';\nimport MoviesList from 'components/MoviesList';\nimport StatusListWrapper from 'components/StatusListWrapper';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/movieDatabaseApi';\nimport { STATUS } from 'utils/config';\nimport { Field, Button } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    setStatus(STATUS.PENDING);\n    searchMovie(query)\n      .then(result => {\n        // throw new Error('Test Error');\n        // console.log(result);\n        setStatus(STATUS.RESOLVED);\n        setMovies(result);\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus(STATUS.REJECTED);\n      });\n  }, [query]);\n\n  const onSearch = e => {\n    e.preventDefault();\n    const value = e.target.elements.search.value;\n    e.target.reset();\n    setSearchParams(value === '' ? {} : { query: value });\n  };\n\n  return (\n    <>\n      <Box\n        onSubmit={onSearch}\n        as=\"form\"\n        display=\"flex\"\n        alignItems=\"center\"\n        height={25}\n        pt={5}\n        mb={4}\n      >\n        <Field type=\"text\" name=\"search\" placeholder=\"Search movie\" />\n        <Button type=\"submit\">Search</Button>\n      </Box>\n\n      <StatusListWrapper status={status} error={error}>\n        <MoviesList\n          movies={movies}\n          path={'/movies/'}\n          state={{ from: location }}\n        />\n      </StatusListWrapper>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Field","styled","p","theme","space","colors","secondaryText","radii","borderRadius","Button","transitions","default","secondaryBgd","useSearchParams","searchParams","setSearchParams","location","useLocation","useState","movies","setMovies","error","setError","STATUS","status","setStatus","query","get","useEffect","searchMovie","then","result","catch","message","Box","onSubmit","e","preventDefault","value","target","elements","search","reset","as","display","alignItems","height","pt","mb","type","name","placeholder","StatusListWrapper","MoviesList","path","state","from"],"sourceRoot":""}