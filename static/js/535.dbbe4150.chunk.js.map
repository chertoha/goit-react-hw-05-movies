{"version":3,"file":"static/js/535.dbbe4150.chunk.js","mappings":"oNAkCA,EA/BoB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACrB,OAAuB,IAAnBA,EAAQC,QACH,sEAIP,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,EAAjB,SACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAH,IAAOC,OAAAA,OAAP,MAAgB,UAAhB,MAA2BC,QAAAA,OAA3B,MAAqC,aAArC,SACX,2BACE,UAACN,EAAA,EAAD,CAAKC,GAAG,KAAKM,EAAG,EAAGC,GAAI,EAAvB,qBACWH,EAAQ,QAEnB,SAACL,EAAA,EAAD,CAAKC,GAAG,IAAIM,EAAG,EAAGC,GAAI,EAAtB,SACGF,MALIF,EADE,KAYlB,E,iDCYD,EA3BgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOb,EAAP,KAAgBc,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,EAAUF,EAAAA,GAAAA,UACVM,EAAAA,EAAAA,IAAaV,GACVW,MAAK,SAAAC,GAEJN,EAAUF,EAAAA,GAAAA,UACVD,EAAWS,EACZ,IACAC,OAAM,SAAAN,GACLC,EAASD,EAAMO,SACfR,EAAUF,EAAAA,GAAAA,SACX,GACJ,GAAE,CAACJ,KAGF,SAACe,EAAA,EAAD,CAAmBV,OAAQA,EAAQE,MAAOA,EAA1C,UACE,SAAC,EAAD,CAAalB,QAASA,KAG3B,C","sources":["pages/Reviews/ReviewsList.js","pages/Reviews/Reviews.js"],"sourcesContent":["import Box from 'components/Box';\nimport PropTypes from 'prop-types';\n\nconst ReviewsList = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n\n  return (\n    <Box as=\"ul\" pt={4}>\n      {reviews.map(({ id, author = 'No info', content = 'No content' }) => (\n        <li key={id}>\n          <Box as=\"h4\" m={0} mb={2}>\n            Author: {author}{' '}\n          </Box>\n          <Box as=\"p\" m={0} mb={5}>\n            {content}\n          </Box>\n        </li>\n      ))}\n    </Box>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }).isRequired\n  ),\n};\n\nexport default ReviewsList;\n","import ReviewsList from './ReviewsList';\nimport StatusListWrapper from 'components/StatusListWrapper';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieReviews } from 'services/movieDatabaseApi';\nimport { STATUS } from 'utils/config';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    movieReviews(movieId)\n      .then(result => {\n        // throw new Error('Test error');\n        setStatus(STATUS.RESOLVED);\n        setReviews(result);\n      })\n      .catch(error => {\n        setError(error.message);\n        setStatus(STATUS.REJECTED);\n      });\n  }, [movieId]);\n\n  return (\n    <StatusListWrapper status={status} error={error}>\n      <ReviewsList reviews={reviews} />\n    </StatusListWrapper>\n  );\n};\n\nexport default Reviews;\n"],"names":["reviews","length","Box","as","pt","map","id","author","content","m","mb","movieId","useParams","useState","setReviews","STATUS","status","setStatus","error","setError","useEffect","movieReviews","then","result","catch","message","StatusListWrapper"],"sourceRoot":""}